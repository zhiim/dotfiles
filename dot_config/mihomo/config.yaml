######### 锚点 start #######
# 策略组相关
pr: &pr
  type: select
  proxies:
    [
      🥤 默认,
      🇭🇰 香港,
      🇹🇼 台湾,
      🇯🇵 日本,
      🇸🇬 新加坡,
      🇺🇸 美国,
      🌏 其它地区,
      🚀 全部节点,
      ♻ 自动选择,
      🎯 直连,
    ]

#这里是订阅更新和延迟测试相关的
p: &p
  type: http
  interval: 21600
  health-check:
    enable: true
    url: https://www.gstatic.com/generate_204
    interval: 3600
######### 锚点 end #######

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  provider:
    <<: *p
    url: ""

ipv6: true
mode: rule
log-level: info
allow-lan: true
mixed-port: 7890
unified-delay: false # 计算延迟时是否去除握手等额外开销
tcp-concurrent: true
external-controller: 127.0.0.1:9090
external-ui: ui # 前端路径/path/to/clash/config/ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

geodata-mode: true
# 自定义GEO下载地址, 启用cdn加速下载
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"

find-process-mode: strict
global-client-fingerprint: chrome

profile:
  store-selected: true # 保存API控制的更改
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"

## tun赋权  ##
# Linux: sudo setcap cap_net_bind_service,cap_net_admin=+ep /path/to/clash
# ref: https://github.com/zzzgydi/clash-verge/issues/182
#
# Windows: 以管理员身份运行
## tun赋权  ##
tun:
  enable: false # 默认关闭
  device: utun0
  inet6-address:
  stack: mixed
  dns-hijack:
    - "any:53"
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: :1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8 # clash 以此IP段发送fakeip映射
  fake-ip-filter: # 以下地址不使用fakeip
    - "*"
    - "+.lan"
    - "+.local"
  default-nameserver: # 用于解析DNS服务器, 必须为IP
    - 223.5.5.5 # 阿里
    - 119.29.29.29 # 腾讯
    - 8.8.8.8 # Google
  proxy-server-nameserver: # 用于解析代理节点的域名
    - https://doh.pub/dns-query
    - 223.5.5.5
    - 8.8.8.8
    - 208.67.222.222 # opendns
  nameserver: # 域名解析
    - https://doh.pub/dns-query # 腾讯doh
    - https://dns.alidns.com/dns-query # 阿里doh
  fallback: # 用于解析fallback-filter匹配的域名
    - "8.8.8.8"
    - "208.67.222.222"
    - "tls://dns.google"
    - "https://doh.opendns.com/dns-query"
  fallback-filter:
    geoip: true
    geoip-code: CN # CN 的IP直接采用, 其余采用fallback的结果
    ipcidr: [240.0.0.0/4]
    domain:
      [
        +.google.com,
        +.facebook.com,
        +.twitter.com,
        +.youtube.com,
        +.xn--ngstr-lra8j.com,
        +.google.cn,
        +.googleapis.cn,
        +.googleapis.com,
        +.gvt1.com,
      ]

proxies:
  - name: "🎯 直连"
    type: direct
    udp: true

proxy-groups:
  - {
      name: 🥤 默认,
      type: select,
      proxies:
        [
          ♻ 自动选择,
          🎯 直连,
          🇭🇰 香港,
          🇹🇼 台湾,
          🇯🇵 日本,
          🇸🇬 新加坡,
          🇺🇸 美国,
          🌏 其它地区,
          🚀 全部节点,
        ],
    }
  - { name: 🚀 全部节点, type: select, include-all-providers: true }
  - { name: 🧊 Google, <<: *pr }
  - { name: 🍭 Telegram, <<: *pr }
  - { name: 🍦 Twitter, <<: *pr }
  - { name: 🍡 Pixiv, <<: *pr }
  - { name: 🫗 哔哩哔哩, <<: *pr }
  - { name: 🥃 哔哩东南亚, <<: *pr }
  - { name: 🧃 巴哈姆特, <<: *pr }
  - { name: 🧋 YouTube, <<: *pr }
  - { name: 🫙 NETFLIX, <<: *pr }
  - { name: 🥛 Spotify, <<: *pr }
  - { name: 🍮 Github, <<: *pr }
  - { name: 📢 谷歌FCM, <<: *pr }
  - {
      name: 🇨🇳 国内,
      type: select,
      proxies:
        [
          🎯 直连,
          🥤 默认,
          🇭🇰 香港,
          🇹🇼 台湾,
          🇯🇵 日本,
          🇸🇬 新加坡,
          🇺🇸 美国,
          🌏 其它地区,
          🚀 全部节点,
          ♻ 自动选择,
        ],
    }
  - { name: ⭐ 其他非大陆, <<: *pr }
  - { name: 🐟 漏网之鱼, <<: *pr }

  #分隔,下面是地区分组
  - {
      name: 🇭🇰 香港,
      type: select,
      include-all-providers: true,
      filter: "(?i)港|hk|hongkong|hong kong",
    }
  - {
      name: 🇹🇼 台湾,
      type: select,
      include-all-providers: true,
      filter: "(?i)台|tw|taiwan",
    }
  - {
      name: 🇯🇵 日本,
      type: select,
      include-all-providers: true,
      filter: "(?i)日|jp|japan",
    }
  - {
      name: 🇰🇷 韩国,
      type: select,
      include-all-providers: true,
      filter: "(?i)韩|kr|korea",
    }
  - {
      name: 🇺🇸 美国,
      type: select,
      include-all-providers: true,
      filter: "(?i)美|us|unitedstates|united states",
    }
  - {
      name: 🇸🇬 新加坡,
      type: select,
      include-all-providers: true,
      filter: "(?i)(新|sg|singapore)",
    }
  - {
      name: 🌏 其它地区,
      type: select,
      include-all-providers: true,
      filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates)).*",
    }
  - {
      name: ♻ 自动选择,
      type: url-test,
      include-all-providers: true,
      tolerance: 10,
    }

rules:
  # 自定义规则
  - DOMAIN-KEYWORD,porn,REJECT
  - DOMAIN-KEYWORD,jav,REJECT
  - DOMAIN-KEYWORD,missav,REJECT
  - DOMAIN-KEYWORD,sex,REJECT
  - DOMAIN-KEYWORD,xvideos,REJECT
  - DOMAIN-SUFFIX,madou.club,REJECT
  - DOMAIN-SUFFIX,wnacg.org,REJECT
  - DOMAIN-SUFFIX,xhamster.com,REJECT
  - DOMAIN-SUFFIX,xnxx.com,REJECT
  - DOMAIN-SUFFIX,rou.video,REJECT
  - RULE-SET,porn_domain,REJECT
  - DOMAIN-SUFFIX,x.com,REJECT
  - DOMAIN-KEYWORD,91cg,REJECT
  - DOMAIN-KEYWORD,51cg,REJECT
  - DOMAIN-KEYWORD,cg51,REJECT
  - DOMAIN-KEYWORD,cg91,REJECT
  - DOMAIN-KEYWORD,cgw,REJECT
  - DOMAIN-KEYWORD,51gua,REJECT
  - DOMAIN-KEYWORD,91gua,REJECT
  - DOMAIN-KEYWORD,gua51,REJECT
  - DOMAIN-KEYWORD,gua91,REJECT

  # 域名规则
  - GEOIP,lan,🎯 直连,no-resolve
  - RULE-SET,biliintl_domain,🥃 哔哩东南亚
  - RULE-SET,github_domain,🍮 Github
  - RULE-SET,twitter_domain,🍦 Twitter
  - RULE-SET,youtube_domain,🧋 YouTube
  - RULE-SET,google_domain,🧊 Google
  - RULE-SET,telegram_domain,🍭 Telegram
  - RULE-SET,netflix_domain,🫙 NETFLIX
  - RULE-SET,bilibili_domain,🫗 哔哩哔哩
  - RULE-SET,bahamut_domain,🧃 巴哈姆特
  - RULE-SET,spotify_domain,🥛 Spotify
  - RULE-SET,pixiv_domain,🍡 Pixiv
  - RULE-SET,geolocation-!cn,⭐ 其他非大陆

  # IP规则, 如果域名规则不匹配则进入IP规则, 此时会使用Clash配置的DNS规则解析IP
  - RULE-SET,google_ip,🧊 Google
  - RULE-SET,netflix_ip,🫙 NETFLIX
  - RULE-SET,telegram_ip,🍭 Telegram
  - RULE-SET,twitter_ip,🍦 Twitter
  - RULE-SET,cn_domain,🇨🇳 国内
  - RULE-SET,cn_ip,🇨🇳 国内
  - MATCH,🐟 漏网之鱼

  # google fcm used in android
  - DOMAIN,alt1-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,alt2-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,alt3-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,alt4-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,alt5-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,alt6-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,alt7-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,alt8-mtalk.google.com,📢 谷歌FCM
  - DOMAIN,mtalk.google.com,📢 谷歌FCM
  - IP-CIDR,64.233.177.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,64.233.186.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,64.233.187.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,64.233.188.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,64.233.189.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.23.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.24.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.28.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.127.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.137.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.203.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.204.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,74.125.206.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,108.177.125.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,142.250.4.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,142.250.10.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,142.250.31.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,142.250.96.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,172.217.194.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,172.217.218.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,172.217.219.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,172.253.63.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,172.253.122.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,173.194.175.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,173.194.218.188/32,📢 谷歌FCM,no-resolve
  - IP-CIDR,209.85.233.188/32,📢 谷歌FCM,no-resolve

## 规则锚点 ##
ip: &ip
  type: http
  interval: 86400
  behavior: ipcidr
  format: yaml
domain: &domain
  type: http
  interval: 86400
  behavior: domain
  format: yaml

rule-providers:
  porn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/1stfine/open_clash/master/rule_provider/rule_porn.yaml"
  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml"
  biliintl_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/biliintl.yaml"
  github_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.yaml"
  twitter_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.yaml"
  youtube_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.yaml"
  google_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.yaml"
  telegram_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.yaml"
  netflix_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.yaml"
  bilibili_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.yaml"
  bahamut_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bahamut.yaml"
  spotify_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.yaml"
  pixiv_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/pixiv.yaml"
  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.yaml"

  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml"
  google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.yaml"
  netflix_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.yaml"
  twitter_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.yaml"
  telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.yaml"
